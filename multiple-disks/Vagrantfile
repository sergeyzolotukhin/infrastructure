# -*- mode: ruby -*-
# vi: set ft=ruby :

disk = './.vagrant/persistence-disk-01.vdi'

Vagrant.configure("2") do |config|
  # Ubuntu 20.04.3 LTS - Focal Fossa
  # config.vm.box = "ubuntu/focal64"
  # Ubuntu 22.04.2 LTS - Jammy Jellyfish
  config.vm.box = "ubuntu/jammy64"

  config.vm.provider :virtualbox do |vb|
    vb.name = "multiple-disks-1"
    vb.memory = "2048"
    vb.cpus = 2
    vb.gui = true

    unless File.exist?(disk)
      vb.customize ['createhd', '--filename', disk, '--variant', 'Standard', '--size', 10 * 1024]
    end
    vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', disk]
  end

  # puts "====================== > " + config.trigger.class.name

  config.trigger.after :halt do |trigger|
    trigger.info = "More information with ruby magic"
    trigger.ruby do |env,machine|
      # puts "======================" + machine.provider.class.name
      # for m in machine.provider.methods
      #   puts m
      # end
      puts "======================"
      machine.provider.driver.execute('storageattach', machine.id,  '--storagectl', 'SCSI', '--port', '2', '--device', '0', '--type', 'hdd', '--medium', 'none', retryable: true)
      # puts machine.provider.driver.execute('showvminfo', machine.id, '--machinereadable', retryable: true)
      puts "======================"
      # puts `VBoxManage showvminfo #{machine.id} --machinereadable | grep ostype`
    end
  end

  # config.vm.network :forwarded_port, guest: 5432, host: 5432
  config.vm.synced_folder ".", "/vagrant"
  config.vm.provision "shell", path: "provision/root-login-enable.sh"
  # config.vm.provision "shell", path: "provision/partitions.sh"
  # config.vm.provision "shell", path: "provision/install-postgresql.sh"

  # config.trigger.before :destroy do |trigger|
  #   trigger.warn = "Dumping database to /vagrant/outfile"
  #   trigger.run_remote = {inline: "pg_dump dbname > /vagrant/outfile"}
    # machine_id = :id
    # trigger.run = {inline: "VBoxManage showvminfo #{machine_id} --machinereadable"}
  # end


end